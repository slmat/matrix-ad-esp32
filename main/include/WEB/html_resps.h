#ifndef HTML_RESPONSES_H
#define HTML_RESPONSES_H

static char const index_html[] =
"<!DOCTYPE html>"
"<html lang=\"en\">"
"<head>"
    "<meta charset=\"UTF-8\">"
    "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
    "<title>ESP-IDF HTTP POST Query Test</title>"
    "<style>"
        "body {"
            "background-color: #212121;"
            "color: #fff;"
            "display: flex;"
            "justify-content: center;"
            "margin: 0;"
            "flex-direction: column;"
            "font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;"
            "padding-top: 20px;"
        "}"
""
        "h1 {"
            "text-align: center;"
        "}"
""
        ".form-container {"
            "display: flex;"
            "align-items: center;"
            "margin-bottom: 20px;"
            "gap: 10px;"
        "}"
""
        ".form, .form_time{"
            "background-color: #1d1d1d;"
            "--width-of-input: 400px;"
            "--border-height: 1px;"
            "--border-before-color: rgba(221, 221, 221, 0.39);"
            "--border-after-color: #5891ff;"
            "--input-hovered-color: #4985e01f;"
            "position: relative;"
            "max-width: var(--width-of-input);"
            "min-width: 300px;"
        "}"
        ".form_time {"
            "min-width: 90px;"
            "max-width: 90px;"
        "}"
""
        ".input {"
            "color: #fff;"
            "font-size: 0.9rem;"
            "background-color: transparent;"
            "width: 100%;"
            "box-sizing: border-box;"
            "padding-inline: 0.5em;"
            "padding-block: 0.7em;"
            "border: none;"
            "border-bottom: var(--border-height) solid var(--border-before-color);"
        "}"
""
        ".input-border {"
            "position: absolute;"
            "background: var(--border-after-color);"
            "width: 0%;"
            "height: 2px;"
            "bottom: 0;"
            "left: 0;"
            "transition: 0.3s;"
        "}"
""
        "input:hover {"
            "background: var(--input-hovered-color);"
        "}"
""
        "input:focus {"
            "outline: none;"
        "}"
""
        "input:focus ~ .input-border {"
            "width: 100%;"
        "}"
""
        ".button {"
            "padding: 12px 20px;"
            "background-color: transparent;"
            "color: #fff;"
            "font-size: 0.9rem;"
            "font-weight: 400;"
            "border: var(--border-height) solid var(--border-before-color);"
            "border-radius: 4px;"
            "cursor: pointer;"
            "position: relative;"
            "overflow: hidden;"
            "transition: background-color 0.3s;"
        "}"
""
        ".button:hover {"
            "background-color: #5891ff;"
        "}"
""
        ".button:focus {"
            "outline: none;"
        "}"
""
        ".container {"
            "display: flex;"
            "flex-direction: column;"
            "align-items: center;"
        "}"
""
        ".button-container {"
            "margin-top: 20px;"
        "}"
""
        ".floating-button {"
            "position: fixed;"
            "top: 10px;"
            "right: 10px;"
            "padding: 10px 15px;"
            "background-color: #5891ff;"
            "color: white;"
            "font-size: 0.9rem;"
            "font-weight: bold;"
            "border: none;"
            "border-radius: 5px;"
            "cursor: pointer;"
            "z-index: 1000;"
        "}"
        "#addButton"
        "{"
            "left:10px;"
            "right:auto;"
        "}"
""
        ".floating-button:hover {"
            "background-color: #497bcc;"
        "}"
""
        "@media (max-width: 600px) {"
            ".form {"
                "min-width: 100%;"
                "max-width: 100%;"
            "}"
            ".form_time {"
                "min-width: 70px;"
                "max-width: 70px;"
            "}"
        "}"
    "</style>"
"</head>"
"<body>"
    "<h1>REKLAMA LED</h1>"
    "<div id=\"formsContainer\" class=\"container\"></div>"
    "<div class=\"button-container\">"
        "<button class=\"floating-button\" id=\"addButton\">Dodaj napis</button>"
    "</div>"
    "<button class=\"floating-button\" id=\"sendButton\">Aktualizuj czas</button>"
    "<script>"
        "function sendTimeValue() {"
            "const timeValue = new Date().toLocaleTimeString('pl-PL', { hour: '2-digit', minute: '2-digit' });"
            "fetch('/time', {"
                "method: 'POST',"
                "headers: {"
                    "'Content-Type': 'text/plain',"
                "},"
                "body: timeValue,"
            "})"
            ".then(response => {"
                "if (response.ok) {"
                "} else {"
                    "throw new Error(`HTTP error! Status: ${response.status}`);"
                "}"
            "})"
            ".catch(error => {"
                "console.error(\"Błąd podczas wysyłania czasu:\", error);"
            "});"
        "}"
""
        "document.getElementById(\"sendButton\").addEventListener(\"click\", sendTimeValue);"
        "function sendRawData(name, textValue, timeValue, textLength) {"
            "const rawData = `${timeValue}.${name}.${textValue}`;"
            "fetch('/modify', {"
                "method: 'POST',"
                "headers: {"
                    "'Content-Type': 'text/plain',"
                "},"
                "body: rawData,"
            "})"
            ".then((response) => {"
                "if (response.ok) {"
                    "return response.text();"
                "} else {"
                    "throw new Error(`HTTP error! Status: ${response.status}`);"
                "}"
            "})"
            ".then((data) => {"
                "console.log(\"Odpowiedź serwera:\", data);"
            "})"
            ".catch((error) => {"
                "console.error(\"Błąd podczas wysyłania danych:\", error);"
            "});"
        "}"
""
        "document.addEventListener(\"DOMContentLoaded\", async () => {"
            "try {"
                "const response = await fetch('/update');"
                "if (!response.ok) {"
                    "throw new Error(`HTTP error! Status: ${response.status}`);"
                "}"
                "const textData = await response.text();"
                "const data = JSON.parse(textData);"
                "const container = document.getElementById(\"formsContainer\");"
""
                "data.forEach((item, index) => {"
                    "const form = document.createElement(\"div\");"
                    "form.classList.add(\"form-container\");"
                    "form.method = \"POST\";"
                    "form.acceptCharset = \"ISO-8859-1\";"
""
                    "const textWrapper = document.createElement(\"div\");"
                    "textWrapper.classList.add(\"form\");"
""
                    "const textInput = document.createElement(\"input\");"
                    "textInput.type = \"text\";"
                    "textInput.classList.add(\"input\");"
                    "textInput.name = item.name || `field${index}`;"
                    "textInput.value = item.value || \"\";"
""
                    "const inputBorder = document.createElement(\"span\");"
                    "inputBorder.classList.add(\"input-border\");"
""
                    "textWrapper.appendChild(textInput);"
                    "textWrapper.appendChild(inputBorder);"
""
                    "const timeInput = document.createElement(\"input\");"
                    "timeInput.type = \"time\";"
                    "timeInput.classList.add(\"input\");"
                    "timeInput.name = `time${index}`;"
                    "timeInput.value = item.time || \"\";"
                    "timeInput.required = \"true\";"
""
                    "const timeBorder = document.createElement(\"span\");"
                    "timeBorder.classList.add(\"input-border\");"
""
                    "const timeWrapper = document.createElement(\"div\");"
                    "timeWrapper.classList.add(\"form_time\");"
                    "timeWrapper.appendChild(timeInput);"
                    "timeWrapper.appendChild(timeBorder);"
""
                    "const submitButton = document.createElement(\"button\");"
                    "submitButton.type = \"submit\";"
                    "submitButton.textContent = \"Aktualizuj\";"
                    "submitButton.classList.add(\"button\");"
                    "submitButton.addEventListener(\"click\", async () => {"
                        "try{"
                        "const form = event.target.closest(\".form-container\");"
                        "if (form) {"
                            "const textInput = form.querySelector('input[type=\"text\"]');"
                            "const timeInput = form.querySelector('input[type=\"time\"]');"
""
                            "if (textInput && timeInput) {"
                                "const name = textInput.name;"
                                "const textValue = textInput.value;"
                                "const timeValue = timeInput.value;"
                                "const textLength = textValue.length;"
                                ""
                                "if (!textValue) {"
                                    "alert(\"Pole tekstowe nie może być puste.\");"
                                    "return;"
                                "}"
""
                                "if (!timeValue) {"
                                    "alert(\"Pole czasowe nie może być puste.\");"
                                    "return;"
                                "}"
                                "sendRawData(name, textValue, timeValue, textLength);"
                            "}"
                        "}"
                    "}"
                    "catch (error) {"
                            "console.error(\"Error removing item:\", error);"
                        "}"
                        "window.location.reload();"
                    "});"
""
                    "const deleteButton = document.createElement(\"button\");"
                    "deleteButton.type = \"button\";"
                    "deleteButton.textContent = \"Usuń\";"
                    "deleteButton.classList.add(\"button\");"
                    "deleteButton.addEventListener(\"click\", async () => {"
                        "try {"
                            "const response = await fetch('/remove', {"
                                "method: 'POST',"
                                "headers: { 'Content-Type': 'text/plain' },"
                                "body: `${item.name}`"
                            "});"
                            "if (!response.ok) {"
                                "throw new Error(`HTTP error! Status: ${response.status}`);"
                            "}"
                        "} catch (error) {"
                            "console.error(\"Error removing item:\", error);"
                        "}"
                        "window.location.reload();"
                    "});"
""
                    "form.appendChild(textWrapper);"
                    "form.appendChild(timeWrapper);"
                    "form.appendChild(submitButton);"
                    "form.appendChild(deleteButton);"
                    "container.appendChild(form);"
                "});"
            "} catch (error) {"
                "console.error(\"Error fetching data:\", error);"
            "}"
        "});"
        "document.getElementById(\"addButton\").addEventListener(\"click\", async () => {"
        "try {"
            "const response = await fetch('/add', {"
                "method: 'POST',"
                "headers: {"
                    "'Content-Type': 'application/json'"
                "},"
                "body: JSON.stringify()"
            "});"
""
            "if (!response.ok) {"
                "throw new Error(`HTTP error! Status: ${response.status}`);"
            "}"
""
            "console.log(\"Added new item.\");"
        "} catch (error) {"
            "console.error(\"Error adding form:\", error);"
        "}"
        "window.location.reload();"
        "});"
    "</script>"
"</body>"
"</html>";



static const char json_dummy[] = "[{\"name\": \"0\",\"value\": \"napis0\",\"time\": \"12:30\"},{\"name\": \"2\",\"value\": \"napis2\",\"time\": \"15:45\"},{\"name\": \"1\",\"value\": \"napis1\",\"time\": \"99:15\"}]";

static const char name[] = "{\"name\":\"";
static const char value[] = "\",\"value\":\"";
static const char TIMe[] = "\",\"time\":\"";
static const char colon[] = ":";

#endif